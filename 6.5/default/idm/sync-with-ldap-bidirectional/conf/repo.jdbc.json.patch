[
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/credential-query",
        "value" : "SELECT obj.objectid, obj.rev, obj.fullobject FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.objecttypes objtype ON objtype.id = obj.objecttypes_id AND objtype.objecttype = ${_resource} INNER JOIN ${_dbSchema}.${_propTable} usernameprop ON obj.id = usernameprop.${_mainTable}_id AND usernameprop.propkey='/userName' INNER JOIN ${_dbSchema}.${_propTable} statusprop ON obj.id = statusprop.${_mainTable}_id AND statusprop.propkey='/accountStatus' WHERE usernameprop.propvalue = ${username} AND statusprop.propvalue = 'active'"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/get-by-field-value",
        "value" : "SELECT obj.objectid, obj.rev, obj.fullobject FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.${_propTable} prop ON obj.id = prop.${_mainTable}_id INNER JOIN ${_dbSchema}.objecttypes objtype ON objtype.id = obj.objecttypes_id WHERE prop.propkey=CONCAT('/', ${field}) AND prop.propvalue = ${value} AND objtype.objecttype = ${_resource}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/query-all",
        "value" : "SELECT obj.objectid, obj.rev, obj.fullobject FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.objecttypes objtype ON obj.objecttypes_id = objtype.id WHERE objtype.objecttype = ${_resource} LIMIT ${int:_pageSize} OFFSET ${int:_pagedResultsOffset}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/query-all-count",
        "value" : "SELECT COUNT(obj.objectid) AS total FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.objecttypes objtype ON obj.objecttypes_id = objtype.id WHERE objtype.objecttype = ${_resource}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/for-userName",
        "value" : "SELECT obj.objectid, obj.rev, obj.fullobject FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.${_propTable} prop ON obj.id = prop.${_mainTable}_id INNER JOIN ${_dbSchema}.objecttypes objtype ON objtype.id = obj.objecttypes_id WHERE prop.propkey='/userName' AND prop.propvalue = ${uid} AND objtype.objecttype = ${_resource}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/credential-internaluser-query",
        "value" : "SELECT * FROM ${_dbSchema}.${_table} WHERE objectid = ${username}"
    },
    {
        "operation" : "remove",
        "field" : "/resourceMapping/explicitMapping/security%2Fkeys"
    },
    {
        "operation" : "replace",
        "field" : "/resourceMapping/genericMapping/relationships/searchableDefault",
        "value" : false
    },
    {
        "operation" : "add",
        "field" : "/resourceMapping/genericMapping/relationships/properties",
        "value" : {
            "/firstResourceCollection" : {
                "searchable" : true
            },
            "/firstResourceId" : {
                "searchable" : true
            },
            "/secondResourceId" : {
                "searchable" : true
            },
            "/secondResourceCollection" : {
                "searchable" : true
            },
            "/firstPropertyName" : {
                "searchable" : true
            },
            "/secondPropertyName" : {
                "searchable" : true
            }
        }
    },
    {
        "operation" : "add",
        "field" : "/resourceMapping/genericMapping/relationships/objectToColumn",
        "value" : {
            "firstResourceCollection" : "firstresourcecollection",
            "firstResourceId" : "firstresourceid",
            "secondResourceCollection" : "secondresourcecollection",
            "secondResourceId" : "secondresourceid",
            "firstPropertyName" : "firstpropertyname",
            "secondPropertyName" : "secondpropertyname",
            "properties" : { "column" : "properties", "type" : "JSON_MAP" }
        }
    },
    {
        "operation" : "add",
        "field" : "/resourceMapping/genericMapping/internal%2Fusermeta",
        "value" : {
            "mainTable" : "genericobjects",
            "propertiesTable" : "genericobjectproperties",
            "searchableDefault" : false
        }
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/find-relationships-for-resource",
        "value" : "SELECT * FROM ${_dbSchema}.${_mainTable} WHERE ((firstresourcecollection = ${resourceCollection} and firstresourceid = ${resourceId} and firstpropertyname = ${propertyName}) or (secondresourcecollection = ${resourceCollection} and secondresourceid = ${resourceId} and secondpropertyname = ${propertyName}))"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/find-relationship-edges",
        "value" : "SELECT * FROM ${_dbSchema}.${_mainTable} WHERE ((firstresourcecollection = ${firstResourceCollection} and firstresourceid = ${firstResourceId} and firstpropertyname = ${firstPropertyName}) and (secondresourcecollection = ${secondResourceCollection} and secondresourceid = ${secondResourceId} and secondpropertyname = ${secondPropertyName})) or ((firstresourcecollection = ${secondResourceCollection} and firstresourceid = ${secondResourceId} and firstpropertyname = ${secondPropertyName}) and (secondresourcecollection = ${firstResourceCollection} and secondresourceid = ${firstResourceId} and secondpropertyname = ${firstPropertyName}))"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/for-userName",
        "value" : "SELECT * FROM ${_dbSchema}.${_table} WHERE username = ${uid}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/credential-query",
        "value" : "SELECT * FROM ${_dbSchema}.${_table} WHERE username = ${username} and accountstatus = 'active'"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/query-all-ids",
        "value" : "SELECT objectid FROM ${_dbSchema}.${_table} LIMIT ${int:_pageSize} OFFSET ${int:_pagedResultsOffset}"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/query-all",
        "value" : "SELECT * FROM ${_dbSchema}.${_table} LIMIT ${int:_pageSize} OFFSET ${int:_pagedResultsOffset}"
    },
    {
        "operation" : "add",
        "field" : "/queries/validInRelationshipQuery",
        "value" : ["credential-query", "get-by-field-value", "query-all", "for-userName", "credential-internaluser-query"]
    }
]