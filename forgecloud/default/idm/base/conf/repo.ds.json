{
  "embedded": true,
  "maxConnectionAttempts" : 5,
  "queries": {
    "generic": {
      "query-all-ids": {
        "_queryFilter": "true",
        "_fields": "_id,_rev"
      },
      "credential-query": {
        "_queryFilter": "/userName eq \"${username}\" AND /accountStatus eq \"active\""
      },
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq \"${username}\""
      },
      "get-by-field-value": {
        "_queryFilter": "/${field} eq \"${value}\""
      },
      "for-userName": {
        "_queryFilter": "/userName eq \"${uid}\""
      },
      "query-all": {
        "_queryFilter": "true"
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq \"${linkType}\" AND /firstId eq \"${firstId}\""
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq \"${linkType}\""
      },
      "get-recons": {
        "_queryFilter": "/entryType eq \"summary\"",
        "_fields": "reconId,mapping,activitydate",
        "_sortKeys": "-activitydate"
      },
      "get-notifications-for-user": {
        "_queryFilter": "/receiverId eq \"${userId}\"",
        "_sortKeys": "-createDate"
      },
      "query-cluster-failed-instances": {
        "_queryFilter": "/timestamp le \"${timestamp}\" and (/state eq 1 or /state eq 2)"
      },
      "query-cluster-running-instances": {
        "_queryFilter": "/state eq 1"
      },
      "query-cluster-instances": {
        "_queryFilter": "true"
      },
      "query-cluster-events": {
        "_queryFilter": "/instanceId eq \"${instanceId}\""
      },
      "find-relationships-for-resource": {
        "_queryFilter": "(/firstResourceCollection eq \"${resourceCollection}\" and /firstResourceId eq \"${resourceId}\" and /firstPropertyName eq \"${propertyName}\") or (/secondResourceCollection eq \"${resourceCollection}\" and /secondResourceId eq \"${resourceId}\" and /secondPropertyName eq \"${propertyName}\")"
      },
      "find-relationship-edges": {
        "_queryFilter": "((/firstResourceCollection eq \"${firstResourceCollection}\" and /firstResourceId eq \"${firstResourceId}\" and /firstPropertyName eq \"${firstPropertyName}\") and (/secondResourceCollection eq \"${secondResourceCollection}\" and /secondResourceId eq \"${secondResourceId}\" and /secondPropertyName eq \"${secondPropertyName}\")) or ((/firstResourceCollection eq \"${secondResourceCollection}\" and /firstResourceId eq \"${secondResourceId}\" and /firstPropertyName eq \"${secondPropertyName}\") and (/secondResourceCollection eq \"${firstResourceCollection}\" and /secondResourceId eq \"${firstResourceId}\" and /secondPropertyName eq \"${firstPropertyName}\"))"
      }
    },
    "explicit": {
      "query-all-ids": {
        "_queryFilter": "true",
        "_fields": "_id,_rev"
      },
      "credential-query": {
        "_queryFilter": "/userName eq \"${username}\" AND /accountStatus eq \"active\""
      },
      "credential-internaluser-query": {
        "_queryFilter": "/_id eq \"${username}\""
      },
      "links-for-firstId": {
        "_queryFilter": "/linkType eq \"${linkType}\" AND /firstId eq \"${firstId}\""
      },
      "links-for-linkType": {
        "_queryFilter": "/linkType eq \"${linkType}\""
      },
      "query-all": {
        "_queryFilter": "true"
      },
      "for-userName": {
        "_queryFilter": "/userName eq \"${uid}\""
      }
    }
  },
  "commands" : {
    "delete-mapping-links" : {
      "_queryFilter": "/linkType eq \"${mapping}\"",
      "operation": "DELETE"
    },
    "delete-target-ids-for-recon" : {
      "_queryFilter": "/reconId eq \"${reconId}\"",
      "operation": "DELETE"
    }
  },
  "rest2LdapOptions": {
    "readOnUpdatePolicy": "controls",
    "useSubtreeDelete": true,
    "usePermissiveModify": true,
    "useMvcc": true,
    "mvccAttribute": "etag",
    "returnNullForMissingProperties": true
  },
  "indices" : { },
  "schemaProviders" : { },
  "resourceMapping": {
    "defaultMapping": {
      "dnTemplate": "ou=generic,dc=openidm,dc=forgerock,dc=com"
    },
    "explicitMapping": {
      "internal/user": {
        "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-internal-user" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "password": {
            "type": "json", "ldapAttribute": "fr-idm-password"
          }
        }
      },
      "internal/role": {
        "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "fr-idm-internal-role" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "cn", "isRequired": true, "writability": "createOnly"
          },
          "name": {
            "type": "simple", "ldapAttribute": "fr-idm-name"
          },
          "description": {
            "type": "simple", "ldapAttribute": "description"
          },
          "temporalConstraints": {
            "type": "json", "ldapAttribute": "fr-idm-temporal-constraints", "isMultiValued": true
          },
          "condition": {
            "type": "simple", "ldapAttribute": "fr-idm-condition"
          },
          "privileges" : {
            "type": "json", "ldapAttribute": "fr-idm-privilege", "isMultiValued": true
          }
        }
      },
      "link": {
        "dnTemplate": "ou=links,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-link" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "linkType": {
            "type": "simple", "ldapAttribute": "fr-idm-link-type"
          },
          "linkQualifier": {
            "type": "simple", "ldapAttribute": "fr-idm-link-qualifier"
          },
          "firstId": {
            "type": "simple", "ldapAttribute": "fr-idm-link-firstId"
          },
          "secondId": {
            "type": "simple", "ldapAttribute": "fr-idm-link-secondId"
          }
        }
      },
      "clusteredrecontargetids" : {
        "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-recon-clusteredTargetIds" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "reconId": {
            "type": "simple", "ldapAttribute": "fr-idm-recon-id"
          },
          "targetIds": {
            "type": "json", "ldapAttribute": "fr-idm-recon-targetIds"
          }
        }
      },
      "locks" : {
        "dnTemplate": "ou=locks,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-lock" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "nodeId": {
            "type": "simple", "ldapAttribute": "fr-idm-lock-nodeid"
          }
        }
      },
      "sync/queue" : {
        "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=forgerock,dc=com",
        "objectClasses": [ "uidObject", "fr-idm-syncqueue" ],
        "properties": {
          "_id": {
            "type": "simple", "ldapAttribute": "uid", "isRequired": true, "writability": "createOnly"
          },
          "syncAction": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-syncaction"
          },
          "resourceCollection": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-resourcecollection"
          },
          "resourceId": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-resourceid"
          },
          "mapping": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-mapping"
          },
          "objectRev": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-objectRev"
          },
          "oldObject": {
            "type": "json", "ldapAttribute": "fr-idm-syncqueue-oldobject"
          },
          "newObject": {
            "type": "json", "ldapAttribute": "fr-idm-syncqueue-newobject"
          },
          "context": {
            "type": "json", "ldapAttribute": "fr-idm-syncqueue-context"
          },
          "state": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-state"
          },
          "nodeId": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-nodeid"
          },
          "remainingRetries": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-remainingretries"
          },
          "createDate": {
            "type": "simple", "ldapAttribute": "fr-idm-syncqueue-createdate"
          }
        }
      },
      "recon/assoc" : {
        "dnTemplate" : "ou=assoc,ou=recon,dc=openidm,dc=forgerock,dc=com",
        "namingStrategy" : {
          "dnAttribute" : "fr-idm-reconassoc-reconid",
          "type" : "clientDnNaming"
        },
        "objectClasses" : [
          "fr-idm-reconassoc"
        ],
        "properties" : {
          "_id" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-reconid",
            "isRequired" : true
          },
          "mapping" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-mapping"
          },
          "sourceResourceCollection" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-sourceresourcecollection"
          },
          "targetResourceCollection" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-targetresourcecollection"
          },
          "isAnalysis" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-isanalysis"
          },
          "finishTime" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-finishtime"
          }
        },
        "subResources" : {
          "entry" : {
            "type" : "collection",
            "resource" : "recon-assoc-entry",
            "namingStrategy" : {
              "dnAttribute" : "uid",
              "type" : "clientDnNaming"
            }
          }
        }
      },
      "recon/assoc/entry" : {
        "resourceName" : "recon-assoc-entry",
        "objectClasses" : [
          "uidObject",
          "fr-idm-reconassocentry"
        ],
        "subResourceRouting" : [
          {
            "template" : "recon/assoc/{reconId}/entry",
            "prefix" : "entry"
          }
        ],
        "properties" : {
          "_id" : {
            "type" : "simple",
            "ldapAttribute" : "uid",
            "isRequired" : true
          },
          "reconId" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-reconid"
          },
          "linkQualifier" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-linkqualifier"
          },
          "status" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-status"
          },
          "situation" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-situation"
          },
          "action" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-action"
          },
          "phase" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-phase"
          },
          "sourceObjectId" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-sourceObjectId"
          },
          "targetObjectId" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-targetObjectId"
          },
          "exception" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-exception"
          },
          "message" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-message"
          },
          "messageDetail" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-messagedetail"
          },
          "ambiguousTargetObjectIds" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassocentry-ambiguoustargetobjectids"
          },
          "mapping" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-mapping"
          },
          "sourceResourceCollection" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-sourceresourcecollection"
          },
          "targetResourceCollection" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-targetresourcecollection"
          },
          "isAnalysis" : {
            "type" : "simple",
            "ldapAttribute" : "fr-idm-reconassoc-isanalysis"
          }
        }
      }
    },
    "genericMapping": {
      "config": {
        "dnTemplate": "ou=config,dc=openidm,dc=forgerock,dc=com"
      },
      "ui/*" : {
        "dnTemplate": "ou=ui,dc=openidm,dc=forgerock,dc=com"
      },
      "managed/*": {
        "dnTemplate": "ou=managed,dc=openidm,dc=forgerock,dc=com"
      },
      "managed/user" : {
        "dnTemplate" : "ou=user,ou=managed,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-managed-user"],
        "jsonAttribute" : "fr-idm-managed-user-json",
        "jsonQueryEqualityMatchingRule" : "caseIgnoreJsonQueryMatchManagedUser"
      },
      "managed/role" : {
        "dnTemplate" : "ou=role,ou=managed,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-managed-role"],
        "jsonAttribute" : "fr-idm-managed-role-json",
        "jsonQueryEqualityMatchingRule" : "caseIgnoreJsonQueryMatchManagedRole"
      },
      "scheduler": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=forgerock,dc=com"
      },
      "scheduler/*": {
        "dnTemplate": "ou=scheduler,dc=openidm,dc=forgerock,dc=com"
      },
      "cluster/*": {
        "dnTemplate": "ou=cluster,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-cluster-obj" ],
        "jsonAttribute" : "fr-idm-cluster-json",
        "jsonQueryEqualityMatchingRule" : "caseIgnoreJsonQueryMatchClusterObject"
      },
      "relationships": {
        "dnTemplate": "ou=relationships,dc=openidm,dc=forgerock,dc=com",
        "objectClasses" : [ "uidObject", "fr-idm-relationship" ],
        "jsonAttribute" : "fr-idm-relationship-json",
        "jsonQueryEqualityMatchingRule" : "caseIgnoreJsonQueryMatchRelationship"
      },
      "updates": {
        "dnTemplate": "ou=updates,dc=openidm,dc=forgerock,dc=com"
      },
      "reconprogressstate" : {
        "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=forgerock,dc=com"
      },
      "jsonstorage" : {
        "dnTemplate": "ou=jsonstorage,dc=openidm,dc=forgerock,dc=com"
      },
      "internal/usermeta" : {
        "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=forgerock,dc=com"
      },
      "internal/notification" : {
        "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=forgerock,dc=com"
      },
      "file" : {
        "dnTemplate": "ou=file,dc=openidm,dc=forgerock,dc=com"
      }
    }
  }
}
